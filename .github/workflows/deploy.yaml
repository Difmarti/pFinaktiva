name: Deploy CloudFormation Stack

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Selecciona el ambiente de despliegue'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - stg
          - prod

jobs:
  # Etapa: Despliegue de VPC
  deploy-vpc:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        env:
          ENV: ${{ github.event.inputs.environment }}
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          ZONA_DEV: us-east-1
          ZONA_STG: us-west-1
          ZONA_PROD: eu-west-1
        run: |
          REGION=$(eval echo \$ZONA_${ENV^^})

          if [ -z "$REGION" ]; then
            echo "No se ha definido la región para el ambiente: $ENV"
            exit 1
          fi

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION

          echo "Configurado AWS CLI para el ambiente $ENV en la región $REGION"

      - name: Desplegar CloudFormation para VPC
        run: |
          ENV=${{ github.event.inputs.environment }}
          PARAMS_FILE="config/vpc-params-${ENV}.json"

          echo "Usando parámetros de $PARAMS_FILE para el ambiente $ENV"

          aws cloudformation deploy \
            --template-file cloudformation/vpc-template.yaml \
            --stack-name finak-vpc-${ENV} \
            --parameter-overrides file://$PARAMS_FILE \
            --capabilities CAPABILITY_NAMED_IAM \
            --region $(aws configure get region)

  # Etapa: Despliegue de Security Group (SG)
  deploy-sg:
    needs: deploy-vpc
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        env:
          ENV: ${{ github.event.inputs.environment }}
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          ZONA_DEV: us-east-1
          ZONA_STG: us-west-1
          ZONA_PROD: eu-west-1
        run: |
          REGION=$(eval echo \$ZONA_${ENV^^})

          if [ -z "$REGION" ]; then
            echo "No se ha definido la región para el ambiente: $ENV"
            exit 1
          fi

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION

          echo "Configurado AWS CLI para el ambiente $ENV en la región $REGION"

      - name: Desplegar CloudFormation para Security Group (SG)
        run: |
          ENV=${{ github.event.inputs.environment }}
          PARAMS_FILE="config/sg-params-${ENV}.json"

          echo "Usando parámetros de $PARAMS_FILE para el ambiente $ENV"

          aws cloudformation deploy \
            --template-file cloudformation/sg-template.yaml \
            --stack-name finak-sg-${ENV} \
            --parameter-overrides file://$PARAMS_FILE \
            --capabilities CAPABILITY_NAMED_IAM \

  # Etapa: Despliegue de IAM
  deploy-iam:
    needs: deploy-vpc
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        env:
          ENV: ${{ github.event.inputs.environment }}
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          ZONA_DEV: us-east-1
          ZONA_STG: us-west-1
          ZONA_PROD: eu-west-1
        run: |
          REGION=$(eval echo \$ZONA_${ENV^^})

          if [ -z "$REGION" ]; then
            echo "No se ha definido la región para el ambiente: $ENV"
            exit 1
          fi

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION

          echo "Configurado AWS CLI para el ambiente $ENV en la región $REGION"

      - name: Desplegar CloudFormation para Security Group (SG)
        run: |
          ENV=${{ github.event.inputs.environment }}
          PARAMS_FILE="config/iam-params-${ENV}.json"

          echo "Usando parámetros de $PARAMS_FILE para el ambiente $ENV"

          aws cloudformation deploy \
            --template-file cloudformation/iam-template.yaml \
            --stack-name finak-iam-${ENV} \
            --parameter-overrides file://$PARAMS_FILE \
            --capabilities CAPABILITY_NAMED_IAM \    

  # Etapa: Despliegue de IAM
  deploy-kms:
    needs: deploy-vpc
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        env:
          ENV: ${{ github.event.inputs.environment }}
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          ZONA_DEV: us-east-1
          ZONA_STG: us-west-1
          ZONA_PROD: eu-west-1
        run: |
          REGION=$(eval echo \$ZONA_${ENV^^})

          if [ -z "$REGION" ]; then
            echo "No se ha definido la región para el ambiente: $ENV"
            exit 1
          fi

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION

          echo "Configurado AWS CLI para el ambiente $ENV en la región $REGION"

      - name: Desplegar CloudFormation para Security Group (SG)
        run: |
          ENV=${{ github.event.inputs.environment }}
          PARAMS_FILE="config/kms-params-${ENV}.json"

          echo "Usando parámetros de $PARAMS_FILE para el ambiente $ENV"

          aws cloudformation deploy \
            --template-file cloudformation/kms-template.yaml \
            --stack-name finak-kms-${ENV} \
            --parameter-overrides file://$PARAMS_FILE \
            --capabilities CAPABILITY_NAMED_IAM \          
  # Etapa: Despliegue de ECS

  deploy-ecs:
    needs: [deploy-vpc, deploy-sg, deploy-iam]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout del Código
        uses: actions/checkout@v3

      - name: Configurar AWS CLI
        env:
          ENV: ${{ github.event.inputs.environment }}
          AWS_ACCESS_KEY_ID: ${{ secrets[format('AWS_ACCESS_KEY_ID_{0}', github.event.inputs.environment | upper)] }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets[format('AWS_SECRET_ACCESS_KEY_{0}', github.event.inputs.environment | upper)] }}
          ZONA_DEV: us-east-1
          ZONA_STG: us-west-1
          ZONA_PROD: eu-west-1
        run: |
          REGION=$(eval echo \$ZONA_${ENV^^})

          if [ -z "$REGION" ]; then
            echo "No se ha definido la región para el ambiente: $ENV"
            exit 1
          fi

          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set default.region $REGION

          echo "Configurado AWS CLI para el ambiente $ENV en la región $REGION"

      - name: Desplegar CloudFormation para Security Group (SG)
        run: |
          ENV=${{ github.event.inputs.environment }}
          PARAMS_FILE="config/ecs-params-${ENV}.json"

          echo "Usando parámetros de $PARAMS_FILE para el ambiente $ENV"

          aws cloudformation deploy \
            --template-file cloudformation/ecs-template.yaml \
            --stack-name finak-ecs-${ENV} \
            --parameter-overrides file://$PARAMS_FILE \
            --capabilities CAPABILITY_NAMED_IAM \       